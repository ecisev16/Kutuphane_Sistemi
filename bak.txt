/*void nokta(PERSON *person){
    FILE *fp;
    int i;
    int read = 0;

    fp = fopen("Yazarlar.csv", "r+");

    for(i=0;i<8;i++){
        read = fscanf(fp, "%d,%[^,],%[^,],%d", &person[i].ID, person[i].name, person[i].surname, &person[i].scor);
        printf("%s %s\n", person[i].name, person[i].surname);
    }
    fclose(fp);
}*/

/*void ok(PERSON *person){
    FILE *fp;
    int i;

    fp = fopen("Yazarlar.csv", "r+");

    for(i=0;i<8;i++){
        fscanf(fp, "%d,%s\n,%s \n", &person->ID, person->name, person->surname);
        printf("%s\n%s\n", person->name, person->surname);
        person++;
    }
    fclose(fp);
}*/

/*void insert_end(PERSON** root, int ID, char name[30], char surname[30]){
    PERSON *new_Person = (PERSON*)malloc(sizeof(PERSON));
    if(new_Person == NULL){
        exit(1);
    }
    new_Person->next = NULL;
    new_Person->ID = ID;
    new_Person->name = name;
    new_Person->surname = surname;

    if(*root == NULL){          // ilk eleman olarak root'un ne olduguna karar vermek gerekiyor ilk once 
        *root = new_Person; // ?????????
        return;
    }

    PERSON *curr;  
    curr = *root;  // ?????????
    while(curr->next != NULL){
        curr = curr->next;
    }
    curr->next = new_Person;

    printf("%d %s %s", new_Person->ID, new_Person->name, new_Person->surname);

    return;
}*/

void yazar_e_s_g(YAZAR **yazar, void(*fptr)(YAZAR*)){
    YAZAR *tmp = *yazar;
    while(tmp->next != NULL){
        fptr(tmp);
        tmp = tmp->next;
    }
}


void yazar_e_s_g(YAZAR **yazar){
    int option;
    printf("Hangi islemi gerceklestireceksiniz?\n");
    scanf("%d", option);
    nextID = takeYazarlar_file(&yazar);

    switch(option){
        case 1 : takeYazarlar_user(&person, nextID); break;
        case 2 : deleteYazarlar(&yazar); break;
        case 3 :
    }
}
