void Split_Data(data* holder,char line[100]){
    int i=0;
    char data1[30];
    char data2[30];
    char data3[30];
    char data4[30];
    char data5[30];

    char stop=line[i];
	char *fp;

    while(line[i]!='\n'){
        if(line[i]==','){
            stop=line[i];

            fp=strtok(line,stop);
	        strcpy(data1,fp);
        }
    }

    /*while((line[i]!=',')&&(line[i]!='\n')){
        i++;
    }
    char stop=line[i];
	char *fp;

	fp=strtok(line,stop);
	strcpy(data1,fp);

    while((line[i]!=',')&&(line[i]!='\n')){
        i++;
    }
    char stop=line[i];

	fp=strtok(NULL,stop);
	strcpy(data2,fp);

	token=strtok(NULL,delimiter);
	token[strlen(token)-1]='\0';

	strcpy(holder->department,token);
    */
}

void takeYazarlar_user(YAZARLAR **yazar, int nextID){
        FILE *fp;
        YAZARLAR *yzr = (YAZARLAR*)malloc(sizeof(YAZARLAR));

        if(yzr == NULL){
            exit(-1);
        } 

        yzr->ID = nextID;

        printf("Yazar bilfilerini giriniz(sirasiyle ad, soyad.): ");
        scanf("%s %s", yzr->name, yzr->surname);
        fp = fopen("Yazarlar.csv", "a");
        printf("%d %s %s", yzr->ID, yzr->name, yzr->surname);
        fprintf(fp, "\n%d,%s,%s", yzr->ID, yzr->name, yzr->surname);

        yzr->next = NULL;
        if(*yazar==NULL){
            *yazar=yzr;

        }
        
        YAZARLAR *curr = *yazar;
        while(curr->next != NULL){
            curr = curr->next;
        }
        curr->next = yzr;
        
        fclose(fp);
        return;
}

void takeYazarlar_user(YAZARLAR **yazar, int nextID){
        FILE *fp;
        YAZARLAR *yzr = (YAZARLAR*)malloc(sizeof(YAZARLAR));

        if(yzr == NULL){
            exit(-1);
        } 

        yzr->next = NULL;
        YAZARLAR *curr = *yazar;
        while(curr->next != NULL){
            curr = curr->next;
        }
        curr->next = yzr;
        yzr->ID = nextID;

        printf("Yazar bilfilerini giriniz(sirasiyle ad, soyad.): ");
        scanf("%s %s", yzr->name, yzr->surname);
        fp = fopen("Yazarlar.csv", "a");
        printf("%d %s %s", yzr->ID, yzr->name, yzr->surname);
        fprintf(fp, "\n%d,%s,%s", yzr->ID, yzr->name, yzr->surname);
        fclose(fp);
}

found2 = 0;
                    while((curr3!=NULL) && !found2){
                        token = strtok(curr2->etiketNo,'_');
                        if(strcmp(curr3->ISBN, token) == 0){
                            found2 = 1;
                            printf("%s\n", curr3->kitapAdi);
                        }
                        prev3 = curr3;
                        curr3 = curr3->next;
    
    void takeKitaplar_file(KITAP **kitap){

    FILE *fp;
    //int i=0;
    char line[100];
    char *sp;
    int i=1;
    int j=0;

    fp = fopen("Kitaplar.csv","r+");
    KITAP *ktp = (KITAP*)malloc(sizeof(KITAP));

    if(fgets(line, 100, fp) != NULL){
        *kitap = ktp;
    }
    ktp->next = NULL;
    ktp->head = NULL;
    Split_Data_k(ktp,line); 
    KITAP *currH = *kitap;
    //KITAP *curr = *kitap;
    //currH->head = ktp->head;
    for(j=0;j<ktp->adet;j++){

        //currH->head = ktp->head;
        takeOrnek(&ktp->head);
        currH->head = ktp->head;
        while(currH->head->next != NULL){
            i++;
            currH->head = currH->head->next;
        }

        strcpy(currH->head->Durum,"rafta");
        sprintf(currH->head->EtiketNo, "\n%s_%d", ktp->ISBN, i);
        i=1;
        printf("%s", currH->head->EtiketNo);
    }  
    //i = 1;
    //printf("\n\n%s %s %d", ktp->kitapAdi, ktp->ISBN, ktp->adet);

    while(fgets(line, 100, fp) != NULL){

        KITAP *ktp = (KITAP*)malloc(sizeof(KITAP));
        if(ktp == NULL){
            exit(-1);
        }

        ktp->next = NULL;
        ktp->head = NULL;
        KITAP *curr = *kitap;
        while(curr->next != NULL){
            curr = curr->next;
        }
        curr->next = ktp;
        Split_Data_k(ktp,line);

        currH = ktp;

        for(j=0;j<ktp->adet;j++){
            //currH->head = ktp->head;
            takeOrnek(&ktp->head);
            while(currH->head->next != NULL){
                i++;
                currH->head = currH->head->next;
            }
            
            strcpy(currH->head->Durum,"rafta");
            sprintf(currH->head->EtiketNo, "\n%s_%d", ktp->ISBN, i);
            i=1;
            printf("%s", currH->head->EtiketNo);
        }  
        //i=1;
        //printf("\n%s %s %d", ktp->kitapAdi, ktp->ISBN, ktp->adet);

    }
}